{"version":3,"file":"fullscreen.min.js","sources":["../src/fullscreen.js"],"sourcesContent":["/**\n * This file is part of Moodle - http:moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http:www.gnu.org/licenses/>.\n */\n\n/**\n * JavaScript to handle full screen.\n *\n * @module qtype_coderunner/fullscreen\n * @copyright 2023 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\n\n/**\n * Fullscreen Editor constructor designed to handle every fullscreen feature.\n *\n * @param {string} questionId id of the outer question div.\n * @param {string} fieldId The id of answer field.\n * @param {string} uiPlugin The input UI type.\n * @constructor\n */\nfunction FullscreenEditor(questionId, fieldId, uiPlugin) {\n    // Set-up.\n    const questionDiv = document.getElementById(questionId);\n    const editorSize = {};\n    let fullScreenButton;\n    let exitFullscreenButton;\n    const editorWrapper = getEditorSelector(fieldId, uiPlugin);\n    // Load fullscreen/exit fullscreen button with icon.\n    Templates.renderForPromise('qtype_coderunner/screenmode_button', {}).then(({html}) => {\n        const screenModeButton = Templates.appendNodeContents(editorWrapper, html, '')[0];\n        fullScreenButton = screenModeButton.querySelector('.button-fullscreen');\n        exitFullscreenButton = screenModeButton.querySelector('.button-exit-fullscreen');\n        // In Firefox, the resize icon is larger than in Chrome,\n        // so we need to add more gap between the full-screen/exit fullscreen button and the resize icon.\n        if (document.documentElement.mozRequestFullScreen) {\n            fullScreenButton.style.right = '12px';\n            exitFullscreenButton.style.right = '12px';\n        }\n        // When load successfully, show the fullscreen button.\n        fullScreenButton.classList.remove('d-none');\n        // Attach an event to the fullscreen/exit-fullscreen button.\n        attachEvent(uiPlugin);\n    });\n\n    /**\n     * Attach event.\n     *\n     * @param {string} uiPlugin The id of the ui plugin.\n     */\n    function attachEvent(uiPlugin) {\n\n        // Attach an event to the exit fullscreen button.\n        exitFullscreenButton.addEventListener('click', e => {\n            e.preventDefault();\n            document.exitFullscreen();\n        });\n\n        // Attach event to fullscreen button.\n        fullScreenButton.addEventListener('click', (e) => {\n            e.preventDefault();\n            getInitialSize(uiPlugin);\n            fullScreenButton.classList.add('d-none');\n            // Handle fullscreen event.\n            editorWrapper.addEventListener('fullscreenchange', () => {\n                // When exit fullscreen.\n                if (document.fullscreenElement === null) {\n                    setDefaultSize(uiPlugin);\n                    exitFullscreenButton.classList.add('d-none');\n                    fullScreenButton.classList.remove('d-none');\n                } else {\n                    exitFullscreenButton.classList.remove('d-none');\n                }\n            });\n\n            editorWrapper.requestFullscreen().catch(Notification.exception);\n        });\n    }\n\n    /**\n     * Each ui plugin has different editor element.\n     * This function designed to get the editor element for the fullscreen zone.\n     *\n     * @param {string} fieldId ID of the textarea.\n     * @param {string} uiPlugin The id of the ui plugin.\n     * @return {Element} Editor element.\n     */\n    function getEditorSelector(fieldId, uiPlugin) {\n        let editorElement;\n        // If the editor is ace or ace_gapfiller then the editor element is the wrapper.\n        if (getUIPluginType(uiPlugin) === 'ace') {\n            editorElement = document.getElementById(`${fieldId}_wrapper`);\n        }\n\n        return editorElement;\n    }\n\n    /**\n     * Get original height of the editor.\n     *\n     * @param {string} uiPlugin The type of the ui plugin.\n     */\n    function getInitialSize(uiPlugin) {\n        if (getUIPluginType(uiPlugin) === 'ace') {\n            editorSize.wrapper = editorWrapper.style.minHeight;\n            editorSize.heightWraper = editorWrapper.style.height;\n            editorSize.editor = questionDiv.querySelector('.ace_editor').style.height;\n            editorSize.content = questionDiv.querySelector('.ace_content').style.height;\n        }\n    }\n\n    /**\n     * Set height of the editor.\n     *\n     * @param {string} uiPlugin The type of the ui plugin.\n     */\n    function setDefaultSize(uiPlugin) {\n        if (getUIPluginType(uiPlugin) === 'ace') {\n            editorWrapper.style.minHeight = editorSize.wrapper;\n            editorWrapper.style.height = editorSize.heightWraper;\n            questionDiv.querySelector('.ace_editor').style.height = editorSize.editor;\n            questionDiv.querySelector('.ace_content').style.height = editorSize.content;\n        }\n    }\n\n    /**\n     * Get the ui plugin type.\n     * If additional ui plugin is added, it should be defined here.\n     *\n     * @param {string} uiPlugin The type of the ui plugin.\n     * @returns {string} Type of the ui plugin.\n     */\n    function getUIPluginType(uiPlugin) {\n        if (uiPlugin === 'ace' || uiPlugin === 'ace_gapfiller') {\n           return 'ace';\n        }\n\n        return 'default';\n    }\n}\n\n/**\n * Initialize the full screen.\n *\n * @param {string} questionId id of the outer question div.\n * @param {string} fieldId The id of answer field.\n * @param {string} uiPlugin The input UI type.\n */\nexport const init = (questionId, fieldId, uiPlugin) => {\n    new FullscreenEditor(questionId, fieldId, uiPlugin);\n};\n"],"names":["FullscreenEditor","questionId","fieldId","uiPlugin","questionDiv","document","getElementById","editorSize","fullScreenButton","exitFullscreenButton","editorWrapper","editorElement","getUIPluginType","getEditorSelector","renderForPromise","then","_ref","html","screenModeButton","Templates","appendNodeContents","querySelector","documentElement","mozRequestFullScreen","style","right","classList","remove","addEventListener","e","preventDefault","exitFullscreen","wrapper","minHeight","heightWraper","height","editor","content","getInitialSize","add","fullscreenElement","setDefaultSize","requestFullscreen","catch","Notification","exception","attachEvent"],"mappings":";;;;;;;cAoCSA,iBAAiBC,WAAYC,QAASC,gBAErCC,YAAcC,SAASC,eAAeL,YACtCM,WAAa,OACfC,iBACAC,2BACEC,uBA4DqBR,QAASC,cAC5BQ,cAE8B,QAA9BC,gBAAgBT,YAChBQ,cAAgBN,SAASC,yBAAkBJ,6BAGxCS,cAnEWE,CAAkBX,QAASC,mBAyGxCS,gBAAgBT,gBACJ,QAAbA,UAAmC,kBAAbA,SAChB,MAGH,6BA5GDW,iBAAiB,qCAAsC,IAAIC,MAAKC,WAACC,KAACA,iBAClEC,iBAAmBC,mBAAUC,mBAAmBV,cAAeO,KAAM,IAAI,GAC/ET,iBAAmBU,iBAAiBG,cAAc,sBAClDZ,qBAAuBS,iBAAiBG,cAAc,2BAGlDhB,SAASiB,gBAAgBC,uBACzBf,iBAAiBgB,MAAMC,MAAQ,OAC/BhB,qBAAqBe,MAAMC,MAAQ,QAGvCjB,iBAAiBkB,UAAUC,OAAO,mBAUjBxB,UAGjBM,qBAAqBmB,iBAAiB,SAASC,IAC3CA,EAAEC,iBACFzB,SAAS0B,oBAIbvB,iBAAiBoB,iBAAiB,SAAUC,IACxCA,EAAEC,0BA0Cc3B,UACc,QAA9BS,gBAAgBT,YAChBI,WAAWyB,QAAUtB,cAAcc,MAAMS,UACzC1B,WAAW2B,aAAexB,cAAcc,MAAMW,OAC9C5B,WAAW6B,OAAShC,YAAYiB,cAAc,eAAeG,MAAMW,OACnE5B,WAAW8B,QAAUjC,YAAYiB,cAAc,gBAAgBG,MAAMW,QA9CrEG,CAAenC,UACfK,iBAAiBkB,UAAUa,IAAI,UAE/B7B,cAAckB,iBAAiB,oBAAoB,KAEZ,OAA/BvB,SAASmC,6BAkDDrC,UACc,QAA9BS,gBAAgBT,YAChBO,cAAcc,MAAMS,UAAY1B,WAAWyB,QAC3CtB,cAAcc,MAAMW,OAAS5B,WAAW2B,aACxC9B,YAAYiB,cAAc,eAAeG,MAAMW,OAAS5B,WAAW6B,OACnEhC,YAAYiB,cAAc,gBAAgBG,MAAMW,OAAS5B,WAAW8B,SAtD5DI,CAAetC,UACfM,qBAAqBiB,UAAUa,IAAI,UACnC/B,iBAAiBkB,UAAUC,OAAO,WAElClB,qBAAqBiB,UAAUC,OAAO,aAI9CjB,cAAcgC,oBAAoBC,MAAMC,sBAAaC,cAjCzDC,CAAY3C,0MA0GA,CAACF,WAAYC,QAASC,gBAClCH,iBAAiBC,WAAYC,QAASC"}